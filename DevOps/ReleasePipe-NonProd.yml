trigger: none
  # branches:
  #   include:
    #- feature/*
    #- release/*
    # - main
  #paths:
  #  include:
  #  - azuredatabricks
    
pool:
  vmImage: 'ubuntu-latest'

variables:
  workingDir: $(Build.Repository.LocalPath)/
  serviceConnection: 'clintazreal2' 
  devResourceGroupName: 'bicep-cga-dev-uks-rg-01'
  testResourceGroupName: 'bicep-cga-test-uks-rg-01'
  location: 'uksouth'
  subscriptionId: '3be2ce56-4a5f-4034-88d7-2953d1819ed3'

stages:
  - stage: publish_bicep_to_agent
    jobs:
      - job:
        steps:
        # building bicep into ARM
        - task: AzureCLI@2  
          displayName: 'Build bicep artifact' 
          inputs: 
            azureSubscription: $(serviceConnection)
            scriptType: 'pscore'  
            scriptLocation: 'inlineScript'  
            inlineScript: |
              $file = "$(Build.SourcesDirectory)/maindeploy.bicep"            
              New-Item -ItemType Directory -Force -Path $(build.artifactstagingdirectory)/infrastructure
              az bicep build --file $file --outdir $(build.artifactstagingdirectory)/infrastructure

              $file = "$(Build.SourcesDirectory)/resourcegroupcreation.bicep"            
              az bicep build --file $file --outdir $(build.artifactstagingdirectory)/infrastructure

        - task: PublishPipelineArtifact@1
          inputs:
            targetPath: '$(build.artifactstagingdirectory)'
            artifact: 'bicepresources'
            publishLocation: 'pipeline'
  
        # Publish the dev-Parameters.json file
        - task: PublishPipelineArtifact@1
          inputs:
            targetPath: '$(Build.SourcesDirectory)/ArmParameters'
            artifact: 'ArmParameters'
            publishLocation: 'pipeline'
  
  - stage: 'development'
    displayName: 'Development infra deploy'
    dependsOn:  publish_bicep_to_agent
    variables:
      - group: Test-vars

    jobs: 
      - deployment: DeployToDevelopment
        environment: dev-data 
        strategy:
          runOnce:
            deploy:
              steps:
                - task: DownloadPipelineArtifact@2 #downloading artifacts created in build stage
                  inputs:
                    source: 'current'
                    path: '$(Pipeline.Workspace)'
                
                - script: echo This is the tenant id $(tenantIDss)
                - task: Bash@3
                  displayName: 'Verify DevOps Variables'
                  inputs:
                    targetType: 'inline'
                    script: |
                      echo "Checking Variables..."
                      echo "Tenant ID: ${tenant-id-secret}"
                      echo "AAD Username: ${aadUsername}"
                      echo "AAD User Object ID: ${aadUserObjectId}"
                # - task: AzureCLI@2
                #   displayName: Bicep deploy Scope of SubscriptionId
                #   inputs:
                #     azureSubscription: $(serviceConnection)
                #     scriptType: bash
                #     scriptLocation: inlineScript
                #     inlineScript: |
                #       az --version
                #       az upgrade
                #       az deployment sub create  \
                #         --name ClintGAzReal \
                #         --location $(location) \
                #         --template-file $(Pipeline.Workspace)/bicepresources/infrastructure/resourcegroupcreation.json \
                #         --parameters environment="dev" azlocation="uksouth" nameofrg="bicep-cga-dev-uks-rg-01"
              
                - task: AzureResourceManagerTemplateDeployment@3
                  displayName: Creating AZ Resource Infrastructure by IaC
                  inputs:
                    deploymentScope: 'Resource Group'
                    azureResourceManagerConnection: '$(serviceConnection)'
                    subscriptionId: '$(subscriptionId)'
                    action: 'Create Or Update Resource Group'
                    resourceGroupName: 'bicep-cga-dev-uks-rg-01'
                    location: '$(location)'
                    templateLocation: 'Linked artifact'
                    csmFile: '$(Pipeline.Workspace)/bicepresources/infrastructure/maindeploy.json'
                    overrideParameters: -serverPassword $(SqlPassword) -deploymentEnvironment dev -gitConfigureLater false -p_aadUsername $(aadUsername) -p_aadUserObjectId $(aadUserObjectId) -p_tenantId $(tenantID) 
                    deploymentMode: 'Incremental'
                    deploymentOutputs: 'ArmOutputs'

  - stage: 'test'
    displayName: 'Test infra deploy'
    dependsOn: development
    variables:
      -group: Test-vars

    jobs: 
      - deployment: DeployToTest
        environment: test-data 
        strategy:
          runOnce:
            deploy:
              steps:
                - task: DownloadPipelineArtifact@2 #downloading artifacts created in build stage
                  inputs:
                    source: 'current'
                    path: '$(Pipeline.Workspace)'
                - task: AzureCLI@2
                  displayName: Bicep deploy Scope of SubscriptionId
                  inputs:
                    azureSubscription: $(serviceConnection)
                    scriptType: bash
                    scriptLocation: inlineScript
                    inlineScript: |
                      az --version
                      az upgrade
                      az deployment sub create  \
                        --name ClintGAzReal \
                        --location $(location) \
                        --template-file $(Pipeline.Workspace)/bicepresources/infrastructure/resourcegroupcreation.json \
                        --parameters environment="test" azlocation="uksouth" nameofrg="bicep-cga-test-uks-rg-01"
              
                - task: AzureResourceManagerTemplateDeployment@3
                  displayName: Creating AZ Resource Infrastructure by IaC
                  inputs:
                    deploymentScope: 'Resource Group'
                    azureResourceManagerConnection: '$(serviceConnection)'
                    subscriptionId: '$(subscriptionId)'
                    action: 'Create Or Update Resource Group'
                    resourceGroupName: 'bicep-cga-test-uks-rg-01'
                    location: '$(location)'
                    templateLocation: 'Linked artifact'
                    csmFile: '$(Pipeline.Workspace)/bicepresources/infrastructure/maindeploy.json'
                    overrideParameters: -serverPassword $(SqlPassword) -deploymentEnvironment test -gitConfigureLater true -p_aadUsername $(aadUsername) -p_aadUserObjectId $(aadUserObjectId) -p_tenantId $(tenant-id-secret) 
                    deploymentMode: 'Incremental'
                    deploymentOutputs: 'ArmOutputs'

  - stage: 'build_adf_services'
    displayName: Build ADF artifact
    jobs:  
    - deployment: JobDataFactoryBuild
      pool:
        vmImage: 'windows-latest'
      displayName: Build data factory
      dependsOn: []
      variables:
        - group: Dev-vars
      environment: dev-data

      strategy:
        runOnce:
          deploy:
            steps:
            - checkout: self
            - task: NodeTool@0
              inputs:
                versionSpec: '18.x'
              displayName: 'Install Node.js'
            
            - task: PowerShell@2
              displayName: 'List Files'
              inputs:
                targetType: 'inline'
                script: |
                  Get-ChildItem -Path $(Build.Repository.LocalPath) -Recurse | ForEach-Object {
                    Write-Host $_.FullName
                  }

            - task: Npm@1
              inputs:
                command: 'install'
                workingDir: '$(Build.Repository.LocalPath)/' 
                verbose: true
              displayName: 'Install npm package'
            
            # Validates all of the Data Factory resources in the repository. You'll get the same validation errors as when "Validate All" is selected.
            # Enter the appropriate subscription and name for the source factory. Either of the "Validate" or "Validate and Generate ARM temmplate" options are required to perform validation. Running both is unnecessary.
            - task: Npm@1
              inputs:
                command: 'custom'
                workingDir: '$(Build.Repository.LocalPath)/' #replace with the package.json folder
                customCommand: 'run build validate $(Build.Repository.LocalPath)/adf-dev /subscriptions/3be2ce56-4a5f-4034-88d7-2953d1819ed3/resourceGroups/bicep-cga-dev-uks-rg-01/providers/Microsoft.DataFactory/factories/adf-bicep-dev-cgr2'
              displayName: 'Validate'

            # Validate and then generate the ARM template into the destination folder, which is the same as selecting "Publish" from the UX.
            # The ARM template generated isn't published to the live version of the factory. Deployment should be done by using a CI/CD pipeline. 

            - task: Npm@1
              inputs:
                command: 'custom'
                workingDir: '$(Build.Repository.LocalPath)/' #replace with the package.json folder
                customCommand: 'run build export $(Build.Repository.LocalPath)/adf-dev /subscriptions/3be2ce56-4a5f-4034-88d7-2953d1819ed3/resourceGroups/bicep-cga-dev-uks-rg-01/providers/Microsoft.DataFactory/factories/adf-bicep-dev-cgr2 "ADFnpmGeneratedArmTemplate"'
            #For using preview that allows you to only stop/ start triggers that are modified, please comment out the above line and uncomment the below line. Make sure the package.json contains the build-preview command. 
            #customCommand: 'run build-preview export $(Build.Repository.LocalPath) /subscriptions/222f1459-6ebd-4896-82ab-652d5f6883cf/resourceGroups/GartnerMQ2021/providers/Microsoft.DataFactory/factories/Dev-GartnerMQ2021-DataFactory "ArmTemplate"'
              displayName: 'Validate and Generate ARM template'


            # Publish the Artifact to be used as a source for a release pipeline
            - task: PublishPipelineArtifact@1
              inputs:
                  targetPath: '$(Build.Repository.LocalPath)/ADFnpmGeneratedArmTemplate'
                  artifact: 'ADFArmTemplatesData01'
                  publishLocation: 'pipeline'

  - stage: 'deploy_adf_services'
    displayName: Deploy ADF artifact
    jobs:  
    - deployment: JobDataFactoryDeploy
      # pool:
      #   vmImage: 'windows-latest'
      displayName: Deploy data factory
      dependsOn: []
      variables:
        - group: Dev-vars
      environment: dev-data
      strategy:
        runOnce:
         preDeploy:
           steps:
              - download: current
                artifact: 'AdfArmTemplatesData01' #  ADF01 arm templates
              - download: current
                artifact: 'ArmParameters' # Download the parameters artifact

         deploy:
           steps:

              # Stop TEST ADF triggers
                - template: ./Util-StopDataFactoryTriggers.yml #./.github/workflows/Util-StartDataFactoryTriggers.yml
                  parameters:
                    ServiceConnection: ${{ variables.serviceConnection }}
                    ResourceGroup: ${{ variables.devResourceGroupName }}
                    SubscriptionId: ${{ variables.subscriptionId }}
                    DataFactoryName: adf-bicep-dev-cgr2

              #Deploy Data Factory DEv pipelines
                - task: AzureResourceManagerTemplateDeployment@3
                  #condition: and(succeed(), eq('${{parameters.doSql}}', 'true')) #this is for the datafactory deployment
                  displayName: "Deploy DEV data factory inner stuff"
                  inputs:
                    deploymentScope: 'Resource Group'
                    azureResourceManagerConnection: ${{ variables.serviceConnection }}
                    subscriptionId: ${{ variables.subscriptionId }} 
                    action: 'Create Or Update Resource Group'
                    resourceGroupName: ${{ variables.devResourceGroupName }}
                    location: ${{ variables.location }}
                    templateLocation: 'Linked artifact'
                    csmFile: '$(Pipeline.Workspace)/ADFArmTemplatesData01/ARMTemplateForFactory.json' # From downloaded artifact
                    csmParametersFile: '$(Pipeline.Workspace)/ArmParameters/dev-Parameters.json' # From downloaded artifact
                    deploymentMode: 'Incremental'
                    overrideParameters: '-default_properties_whichEnv_value dev'
                    #overrideParameters: '-factoryName $(SetSqlVarFQDNp2.adfNameOutput) -facstuff_DatabaseSOURCE_connectionString "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=$(SetSqlVarFQDNp2.sqlSrvNameOutput);Initial Catalog=dba-fac-stf-source;Server=tcp:$(SetSqlVarFQDNp2.sqlSrvNameOutput),1433;TrustServerCertificate=False" -facstuff_DatabaseTARGET_connectionString "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=$(SetSqlVarFQDNp2.sqlSrvNameOutput);Initial Catalog=dba-facstuff-target;Server=tcp:$(SetSqlVarFQDNp2.sqlSrvNameOutput),1433;TrustServerCertificate=False"'
                    #outputs: adfNameOutput

              # Stop TEST ADF triggers
                - template: ./Util-StopDataFactoryTriggers.yml #./.github/workflows/Util-StartDataFactoryTriggers.yml
                  parameters:
                    ServiceConnection: ${{ variables.serviceConnection }}
                    ResourceGroup: ${{ variables.testResourceGroupName }}
                    SubscriptionId: ${{ variables.subscriptionId }}
                    DataFactoryName: adf-bicep-test-cgr2

              #Deploy Data Factory TEST pipelines
                - task: AzureResourceManagerTemplateDeployment@3
                  #condition: and(succeed(), eq('${{parameters.doSql}}', 'true')) #this is for the datafactory deployment
                  displayName: "Deploy TEST data factory inner stuff"
                  inputs:
                    deploymentScope: 'Resource Group'
                    azureResourceManagerConnection: ${{ variables.serviceConnection }}
                    subscriptionId: ${{ variables.subscriptionId }} 
                    action: 'Create Or Update Resource Group'
                    resourceGroupName: ${{ variables.testResourceGroupName }}
                    location: ${{ variables.location }}
                    templateLocation: 'Linked artifact'
                    csmFile: '$(Pipeline.Workspace)/ADFArmTemplatesData01/ARMTemplateForFactory.json' # From downloaded artifact
                    csmParametersFile: '$(Pipeline.Workspace)/ArmParameters/test-Parameters.json' # From downloaded artifact
                    deploymentMode: 'Incremental'
                    overrideParameters: '-factoryName adf-bicep-test-cgr2 -default_properties_whichEnv_value test'
                    #outputs: adfNameOutput
             
              # Start TEST ADF triggers
                - template: ./Util-StartDataFactoryTriggers.yml #./.github/workflows/Util-StartDataFactoryTriggers.yml
                  parameters:
                    ServiceConnection: ${{ variables.serviceConnection }}
                    ResourceGroup: ${{ variables.testResourceGroupName }}
                    SubscriptionId: ${{ variables.subscriptionId }}
                    DataFactoryName: adf-bicep-test-cgr2


